{"version":3,"sources":["resources/js/responsiveMenu.ts"],"names":["template","document","createElement","innerHTML","window","customElements","define","HTMLElement","[object Object]","super","this","_thresholdY","_collapseSize","_animateOverlayBg","_hideOverlayDelay","shadowRoot","attachShadow","mode","delegatesFocus","ShadyCSS","prepareTemplate","styleElement","appendChild","importNode","content","observedAttributes","attrName","oldVal","newVal","scrollEnded","toggleExtended","addEventListener","throttle","clearTimeout","setTimeout","bind","querySelector","toggleOverlay","callback","limit","wait","call","pageYOffset","thresholdy","removeAttribute","documentElement","clientWidth","collapsesize","setAttribute","thresholdY","collapseSize","hideoverlaydelay","hideOverlayDelay","animateoverlaybg","animateOverlayBg","hasAttribute","dispatchEvent","CustomEvent","detail","visible","body","style","overflow","classList","add","remove"],"mappings":"yBAMA,IAAIA,EAAWC,SAASC,cAAc,YACtCF,EAASG,UAAY,ohNAuarBC,OAAOC,eAAeC,OAAO,gCAjLGC,YAK9BC,cAGEC,QANMC,KAAAC,YAAiB,IACjBD,KAAAE,cAA4B,IAOlCF,KAAAG,mBAAsB,EAEtBH,KAAAI,kBAAwB,IAFxB,IAeAC,EAAQL,KAAAM,cAAcC,KAAgB,OAAAC,gBAAoB,IAMpC,oBAAxBC,WAlBIA,SAmBGC,gBAAkBpB,EAAA,mBAOzBmB,SAAAE,aAAiBX,OArBfK,EA0BAO,YAASrB,SAAiBsB,WAAUvB,EAAKwB,SAAS,IApBpDC,gCACE,OA4BA,aAAO,eAA2B,mBAAc,oBAtBlDjB,yBAiCkBkB,EAAAC,EAAAC,GAhChBlB,KAiCAgB,GAAOE,EA1BTpB,oBAIE,IAqCAqB,EAvCAnB,KAiCDoB,iBA9BC7B,SAqCE8B,iBAAY,SAAgBrB,KAAAsB,SAAW,WApCvCtB,KAqCDoB,iBAnCCG,aAqCOJ,GApCPA,EAqCDK,WAAA,KACDxB,KAAKoB,kBACN,MAKDK,KAAIzB,MAAU,KAvCZN,OAAO2B,iBAwCoC,SAAArB,KAAAsB,SAAA,WAvCzCtB,KAwCFoB,kBACDK,KAAAzB,MAAA,KAtCCA,KA4CAK,WAAYqB,cAAW,aAAAL,iBAAA,QAAArB,KAAA2B,cAAAF,KAAAzB,OAtCzBF,SA+CC8B,EAAAC,GAKD,IAAIC,GAAA,EAlDF,OAmDA,WACDA,IAKGF,EAAAG,OACFD,GAAI,EAtDAN,WAsDmD,WACvDM,GAAK,GACND,KA9CD/B,iBAkEA,OAAIJ,OAAAsC,YAAgBhC,KAAAiC,WAClBjC,KAAOkC,gBAAK,YAMd3C,SAAA4C,gBAAaC,YAAApC,KAAAqC,aAELrC,KAAKkC,gBAAa,iBApExBlC,KAAKsC,aAsEM,WAAW,IAhExBL,eAsEGM,GAEDvC,KAAKC,cAAcsC,IAtEnBvC,KAuEAC,YAASsC,GAjEXN,iBACE,OAwEGjC,KAAKC,YAlEVoC,iBAAkBG,GACZxC,KAAKE,gBAAkBsC,IAC3BxC,KAAKE,cAAgBsC,GAMvBH,mBACE,OAAOrC,KAAKE,cAMduC,qBAAsBC,GAChB1C,KAAKI,oBAAsBsC,IAC/B1C,KAAKI,kBAAoBsC,GAM3BD,uBACE,OAAOzC,KAAKI,kBAMduC,qBAAsBC,GAChB5C,KAAKG,oBAAsByC,IAC/B5C,KAAKG,kBAAoByC,GAM3BD,uBACE,OAAO3C,KAAKG,kBAMdL,gBAEE,IAAME,KAAK6C,aAAa,kBAOtB,OANA7C,KAAK8C,cAAc,IAAIC,YAAY,iBAAmBC,QAAUC,SAAS,MACzE1D,SAAS2D,KAAKC,MAAMC,SAAW,UACD,IAA1BpD,KAAK2C,kBACP3C,KAAKK,WAAWqB,cAAc,eAAe2B,UAAUC,IAAI,aAE7DtD,KAAKqD,UAAUC,IAAI,aACZtD,KAAKsC,aAAa,iBAAkB,IAG7CtC,KAAK8C,cAAc,IAAIC,YAAY,iBAAmBC,QAAUC,SAAS,OAC3C,IAA1BjD,KAAK2C,kBACP3C,KAAKK,WAAWqB,cAAc,eAAe2B,UAAUE,OAAO,aAEhEvD,KAAKqD,UAAUE,OAAO,aAEtB/B,WAAW,KACTxB,KAAKkC,gBAAgB,kBACrB3C,SAAS2D,KAAKC,MAAMC,SAAW,QAC9BpD,KAAKyC","file":"responsiveMenu.js","sourcesContent":["/* global HTMLElement CustomEvent */\n'use strict'\n\n// import { shape, timeline, render, play } from 'wilderness'\n\ndeclare const ShadyCSS // eslint-disable-line no-unused-vars\nlet template = document.createElement('template')\ntemplate.innerHTML = `<style>\n  :host{\n    pointer-events: none;\n    display: flex;\n    position: fixed;\n    justify-content: flex-end;\n    top: 0;\n    left: 0;\n    z-index: 990;\n    transform: translateZ(100px); /* safari hack */\n    width: 100vw;\n    height: 66px;\n  }\n  /*Firefox bug: responsive-menu > [slot=\"items\"]*/\n  nav [slot=\"items\"],\n  ::slotted([slot=\"items\"]){\n    color: inherit;\n    pointer-events: auto;\n    padding: var(--size-xl, 20px) var(--size-s, 10px) var(--size-m, 10px);\n    margin: 0 var(--size-xs);\n    text-decoration: none;\n    text-transform: uppercase;\n    overflow: hidden;\n    position: relative;\n    font-size: var(--size-l);\n    font-family: var(--font-montserrat);\n    font-weight: var(--font-montserrat-bold);\n    letter-spacing: var(--font-montserrat-spacing);\n    transition: color .35s var(--easeInOutQuad);\n  }\n  nav [slot=\"items\"]:hover,\n  ::slotted([slot=\"items\"]:hover){\n    color: var(--black);\n  }\n  nav [slot=\"items\"]:before,\n  ::slotted([slot=\"items\"])::before{\n    display: block;\n    content: \"\";\n    position: absolute;\n    width: 0;\n    height: 7px;\n    top: calc(50% + 5px);\n    transform: translateY(-50%);\n    left: -4px;\n    z-index: -1;\n    opacity: 1;\n    background-color: var(--veare-orange);\n    transition: width .35s var(--easeInOutQuad);\n  }\n  nav [slot=\"items\"]:hover:before,\n  ::slotted([slot=\"items\"]:hover)::before,\n  nav [slot=\"items\"]:focus:before,\n  ::slotted([slot=\"items\"]:focus)::before{\n    width: calc(100% + 8px);\n  }\n  footer [slot=\"footer\"],\n  ::slotted([slot=\"footer\"]){\n    color: rgba(var(--white-rgb), .6) !important;\n    position: relative;\n    display: inline-block;\n    font-size: 16px;\n    text-decoration: none;\n    padding: var(--size-m, 10px) var(--size-s, 10px);\n    margin: 0;\n    transition: color .35s var(--easeInOutQuad);\n  }\n  footer [slot=\"footer\"]:hover,\n  ::slotted([slot=\"footer\"]:hover){\n    color: var(--white) !important;\n  }\n  nav{\n    display: flex;\n    position: absolute;\n    z-index: 10;\n    height: 66px;\n    top: -66px;\n    right: 0;\n    opacity: 0;\n    transition-property: opacity, top;\n    transition-duration: .35s;\n  }\n  :host([extended]) nav{\n    top: 0;\n    opacity: 1;\n  }\n  #menuIcon {\n    position: absolute;\n    top: 0;\n    right: 0;\n    z-index: 100;\n    pointer-events: all;\n    cursor: pointer;\n    width: 60px;\n    height: 60px;\n    transform: translate3d(4px, 0, 0);\n  }\n  #menuIcon path, :host([extended][overlayvisible]) #menuIcon path{\n    fill: none;\n    stroke-width: 40px;\n    stroke: var(--responsive-menu-menu-icon, rgb(33,37,41));\n    stroke-dashoffset: 0;\n    opacity: 1;\n    transition: opacity .5s .2s ease, stroke-dashoffset .5s .2s ease, stroke .3s ease;\n  }\n  :host([extended]) #menuIcon path {\n    transition: stroke-dashoffset 0.5s cubic-bezier(0.25, -0.25, 0.75, 1.25), stroke-dasharray 0.5s cubic-bezier(0.25, -0.25, 0.75, 1.25), stroke .3s ease;\n    stroke-dashoffset: 240px;\n    opacity: 0;\n  }\n  #menuIcon path#top,\n  #menuIcon path#bottom {\n    stroke-dasharray: 270px 950px;\n  }\n  #menuIcon path#middle {\n    stroke-dasharray: 270px 270px;\n  }\n  :host([overlayVisible]) #menuIcon path#top,\n  :host([overlayVisible]) #menuIcon path#bottom {\n    stroke-dashoffset: -666px;\n  }\n  :host([overlayVisible]) #menuIcon path#middle {\n    stroke-dashoffset: -270px;\n  }\n  :host([overlayVisible]) #menuIcon path{\n    stroke: var(--responsive-menu-close-icon, rgb(255,255,255));\n  }\n  :host([overlayVisible]){\n    height: 100%;\n  }\n  :host([overlayVisible]) nav{\n    flex-direction: column;\n    align-items: flex-start;\n    height: 100%;\n    width: 30%;\n    min-width: 300px;\n    opacity: 0;\n    padding-top: var(--size-xl);\n  }\n  :host(.is-active) nav{\n    opacity: 1;\n    top: 0;\n  }\n  /*Firefox bug: responsive-menu > [slot=\"items\"]*/\n  :host([overlayVisible]) nav [slot=\"items\"],\n  :host([overlayVisible]) ::slotted([slot=\"items\"]){\n    font-size: var(--size-xl);\n    color: rgba(var(--white-rgb), .75) !important;\n  }\n  :host([overlayVisible]) nav [slot=\"items\"]:hover,\n  :host([overlayVisible]) ::slotted([slot=\"items\"]:hover){\n    color: rgba(var(--white-rgb), 1) !important;\n  }\n  :host([overlayVisible]) nav [slot=\"items\"]:before,\n  :host([overlayVisible]) ::slotted([slot=\"items\"])::before{\n    background-color: rgba(var(--black-rgb), .5);\n  }\n  #info{\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n    pointer-events: none;\n    position: absolute;\n    z-index: 10;\n    opacity: 0;\n    bottom: -50px;\n    left: 0;\n    transition: bottom .3s ease, opacity .3s ease;\n    width: 70%;\n    height: 100%;\n    max-width: calc(100% - 300px);\n    background: rgb(255,255,255);\n  }\n  :host([overlayVisible]) #info{\n    opacity: 0;\n    bottom: -50px;\n    pointer-events: all;\n    transition: bottom .3s ease, opacity .3s ease;\n  }\n  :host(.is-active) #info{\n    opacity: 1;\n    bottom: 0px;\n    transition: bottom .3s ease, opacity .3s ease;\n  }\n  @media(max-width: 700px){\n    :host([overlayVisible]) #info{\n      display: none;\n    }\n  }\n  #background{\n    z-index: 1;\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: transparent;\n    transition: background-color .3s ease;\n  }\n  #background.is-active{\n    background-color: var(--blue);\n  }\n  footer{\n    display: none;\n    pointer-events: all;\n  }\n  :host([overlayVisible]) footer{\n    display: block;\n    position: absolute;\n    right: 0;\n    bottom: -50px;\n    z-index: 10;\n    height: 50px;\n    width: calc(30% - 2 * var(--size-xs));\n    min-width: calc(300px - 2 * var(--size-xs));\n    opacity: 0;\n    margin: 0 var(--size-xs);\n    transition: bottom .3s ease, opacity .3s ease;\n  }\n  :host(.is-active) footer{\n    bottom: 0;\n    opacity: 1;\n  }\n  </style>\n  <svg id=\"menuIcon\" viewBox=\"0 0 800 500\">\n    <path d=\"M270,220 C300,220 520,220 540,220 C740,220 640,540 520,420 C440,340 300,200 300,200\" id=\"top\"></path>\n    <path d=\"M270,320 L540,320\" id=\"middle\"></path>\n    <path d=\"M270,210 C300,210 520,210 540,210 C740,210 640,530 520,410 C440,330 300,190 300,190\" id=\"bottom\" transform=\"translate(480, 320) scale(1, -1) translate(-480, -318) \"></path>\n  </svg>\n  <div id=\"info\">\n    <slot name=\"info\"></slot>\n    <slot name=\"infoBackground\"></slot>\n  </div>\n  <nav>\n    <slot name=\"items\"></slot>\n    <slot name=\"navBackground\"></slot>\n  </nav>\n  <footer>\n    <slot name=\"footer\"></slot>\n  </footer>\n  <div id=\"background\">\n    <slot name=\"background\"></slot>\n  </div>\n  `\n\nclass ResponsiveMenu extends HTMLElement { // eslint-disable-line no-unused-vars\n  /* Typescript: declare variables */\n  private _thresholdY: number = 150 // eslint-disable-line no-undef\n  private _collapseSize: number = 700 // eslint-disable-line no-undef\n  private _animateOverlayBg: boolean = true // eslint-disable-line no-undef\n  private _hideOverlayDelay: number = 300 // eslint-disable-line no-undef\n\n  constructor () {\n    // If you define a constructor, always call super() first!\n    // This is specific to CE and required by the spec.\n    super()\n    // create shadowRoot\n    let shadowRoot = this.attachShadow({mode: 'open', delegatesFocus: false})\n    // check if polyfill is used\n    if (typeof ShadyCSS !== 'undefined') {\n      ShadyCSS.prepareTemplate(template, 'responsive-menu') // eslint-disable-line no-undef\n      // apply css polyfill\n      ShadyCSS.styleElement(this) // eslint-disable-line no-undef\n    }\n    // add content to shadowRoot\n    shadowRoot.appendChild(document.importNode(template.content, true))\n  }\n  /**\n  * @method observedAttributes\n  * @description return attributes that should be watched for updates\n   */\n  static get observedAttributes () {\n    return ['thresholdy', 'collapsesize', 'hideoverlaydelay', 'animateoverlaybg']\n  }\n  /**\n  * @method observedAttributes\n  * @description return attributes that should be watched for updates\n   */\n  attributeChangedCallback (attrName: string, oldVal: any, newVal: any) { // eslint-disable-line no-unused-vars\n    this[attrName] = newVal\n  }\n\n  /**\n  * @method connectedCallback\n  * @description When element is added to DOM\n   */\n  connectedCallback () {\n    // initial run\n    this.toggleExtended()\n    // onScrollEvent\n    let scrollEnded\n    document.addEventListener('scroll', this.throttle(function () {\n      this.toggleExtended()\n      // scrollEnded\n      clearTimeout(scrollEnded)\n      scrollEnded = setTimeout(() => {\n        this.toggleExtended()\n      }, 300)\n    }.bind(this), 20))\n    // onResizeEvent\n    window.addEventListener('resize', this.throttle(function () {\n      this.toggleExtended()\n    }.bind(this), 20))\n    // menuIcon on click\n    this.shadowRoot.querySelector('#menuIcon').addEventListener('click', this.toggleOverlay.bind(this))\n  }\n  /**\n  * @method throttle\n  * @description throttle function\n   */\n  throttle (callback: any, limit: number) {\n    let wait = false\n    return function () {\n      if (!wait) {\n        callback.call()\n        wait = true\n        setTimeout(function () {\n          wait = false\n        }, limit)\n      }\n    }\n  }\n  /**\n  * @method toggleExtendedOnY\n  * @description toggle extended attribute when scrollPosY is bigger than this._thresholdY\n   */\n  toggleExtended () {\n    if (window.pageYOffset > this.thresholdy) {\n      return this.removeAttribute('extended')\n    }\n    if(document.documentElement.clientWidth < this.collapsesize) {\n      return this.removeAttribute('extended')\n    }\n    this.setAttribute('extended', '')\n  }\n  /**\n  * @method setter thresholdY\n  * @description set the thresholdY property\n   */\n  set thresholdy (thresholdY: number) {\n    if (this._thresholdY === thresholdY) return\n    this._thresholdY = thresholdY\n  }\n  /**\n   * @method getter thresholdY\n   * @description get the thresholdY property\n   */\n  get thresholdy () {\n    return this._thresholdY\n  }\n  /**\n  * @method setter collapseSize\n  * @description set the collapseSize property\n   */\n  set collapsesize (collapseSize: number) {\n    if (this._collapseSize === collapseSize) return\n    this._collapseSize = collapseSize\n  }\n  /**\n   * @method getter collapseSize\n   * @description get the collapseSize property\n   */\n  get collapsesize () {\n    return this._collapseSize\n  }\n  /**\n  * @method setter hideOverlayDelay\n  * @description set the hideOverlayDelay property\n   */\n  set hideoverlaydelay (hideOverlayDelay: number) {\n    if (this._hideOverlayDelay === hideOverlayDelay) return\n    this._hideOverlayDelay = hideOverlayDelay\n  }\n  /**\n   * @method getter hideOverlayDelay\n   * @description get the hideOverlayDelay property\n   */\n  get hideoverlaydelay () {\n    return this._hideOverlayDelay\n  }\n  /**\n  * @method setter animateOverlayBg\n  * @description set the animateOverlayBg property\n   */\n  set animateoverlaybg (animateOverlayBg: boolean) {\n    if (this._animateOverlayBg === animateOverlayBg) return\n    this._animateOverlayBg = animateOverlayBg\n  }\n  /**\n   * @method getter animateOverlayBg\n   * @description get the animateOverlayBg property\n   */\n  get animateoverlaybg () {\n    return this._animateOverlayBg\n  }\n  /**\n   * @method toggleOverlay\n   * @description everything tha happens when toggling the overlay\n   */\n  toggleOverlay () {\n    // show overlay\n    if (! this.hasAttribute('overlayVisible')) {\n      this.dispatchEvent(new CustomEvent('toggleOverlay', { detail: { visible: true } } ))\n      document.body.style.overflow = 'hidden'\n      if (this.animateoverlaybg === true) {\n        this.shadowRoot.querySelector('#background').classList.add('is-active')\n      }\n      this.classList.add('is-active')\n      return this.setAttribute('overlayVisible', '')\n    }\n    // hide overlay\n    this.dispatchEvent(new CustomEvent('toggleOverlay', { detail: { visible: false } } ))\n    if (this.animateoverlaybg === true) {\n      this.shadowRoot.querySelector('#background').classList.remove('is-active')\n    }\n    this.classList.remove('is-active')\n\n    setTimeout(() => {\n      this.removeAttribute('overlayVisible')\n      document.body.style.overflow = 'auto'\n    }, this.hideoverlaydelay)\n  }\n}\n\nwindow.customElements.define('responsive-menu', ResponsiveMenu)\n"]}
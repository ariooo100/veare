{"version":3,"sources":["resources/js/nucleiButton.ts"],"names":["template","document","createElement","innerHTML","window","customElements","define","HTMLElement","[object Object]","super","this","_href","_rel","_target","shadowRoot","attachShadow","mode","ShadyCSS","prepareTemplate","styleElement","appendChild","importNode","content","observedAttributes","attrName","oldVal","newVal","link","querySelector","setAttribute","href","target","rel"],"mappings":"yBAIA,IAAIA,EAAWC,SAASC,cAAc,YACtCF,EAASG,UAAY,8uDAiKrBC,OAAOC,eAAeC,OAAO,8BAzF3BC,YAAAC,cAGEC,QAPMC,KAAAC,MAAkB,GAClBD,KAAAE,KAAiB,GACjBF,KAAAG,QAAoB,GAO1B,IASDC,EAAAJ,KAAAK,cAAAC,KAAA,SAMiB,oBAATC,WACRA,SAAAC,gBAAAlB,EAAA,iBAXGiB,SAiBGE,aAAYT,OAdjBI,EAsBIM,YAAYnB,SAAWoB,WAAArB,EAAcsB,SAAU,IAhBrDC,gCACE,OA2ByB,OAAM,MAAA,SAAA,YArBjCf,yBAmC0BgB,EAAAC,EAAAC,GAlCxBhB,KAmCAc,GAASE,EA5BXlB,oBACE,IA0CAmB,EAAIjB,KAAKI,WAAYc,cAAA,WAzCrBD,EAAKE,aAyCwB,OAAAnB,KAAAoB,MAxC7BH,EAyCAE,aAAY,SAAGnB,KAAAqB,QAxCfJ,EAyCDE,aAAA,MAAAnB,KAAAsB,KAjCDF,SAAUA,GACJpB,KAAKC,QAAUmB,IACnBpB,KAAKC,MAAQmB,GAMfA,WACE,OAAOpB,KAAKC,MAMdoB,WAAYA,GACNrB,KAAKG,UAAYkB,IACrBrB,KAAKG,QAAUkB,GAMjBA,aACE,OAAOrB,KAAKG,QAMdmB,QAASA,GACHtB,KAAKE,OAASoB,IAClBtB,KAAKE,KAAOoB,GAMdA,UACE,OAAOtB,KAAKE","file":"nucleiButton.js","sourcesContent":["/* global HTMLElement CustomEvent */\n'use strict'\n\ndeclare const ShadyCSS // eslint-disable-line no-unused-vars\nlet template = document.createElement('template')\ntemplate.innerHTML = `<style>\n  :host{\n    position: relative;\n    cursor: pointer;\n    line-height: 100%;\n    font-family: var(--font-montserrat);\n    font-weight: var(--font-montserrat-semibold);\n    font-size: var(--size-l);\n  }\n  #button{\n    display: block;\n    position: relative;\n    color: var(--nuclei-button-text-color, #fff);\n    text-decoration: none;\n    padding: 0;\n    transition: transform .35s ease;\n  }\n  #background{\n    display: block;\n    top: 0;\n    left: 0;\n    position: absolute;\n    background: var(--nuclei-button-color, var(--blue));\n    width: 100%;\n    height: 100%;\n    z-index: 1;\n  }\n  #text{\n    display: inline-block;\n    z-index: 10;\n    position: relative;\n    padding: 13px 16px;\n  }\n  #shadow{\n    position: absolute;\n    z-index: 0;\n    width: calc(100% - 20px);\n    left: 10px;\n    height: 60%;\n    background: var(--nuclei-button-color, var(--blue));\n    bottom: 0;\n    box-shadow: 0 5px 20px 0 var(--nuclei-button-color, var(--blue)),\n                0 0px 5px 0 var(--nuclei-button-color, var(--blue)),\n                0 0px 70px 0 var(--nuclei-button-color, var(--blue));\n    border-radius: 5px;\n    opacity: .5;\n    transition: opacity .5s ease, box-shadow .5s ease, width .5s ease;\n  }\n  :host(:hover) #shadow{\n    width: calc(100% - 10px);\n    opacity: .75;\n    box-shadow: 0 2px 10px 0 var(--nuclei-button-color, var(--blue)),\n                0 0px 3px 0 var(--nuclei-button-color, var(--blue)),\n                0 0px 50px 0 var(--nuclei-button-color, var(--blue));\n  }\n  :host(:hover) #button{\n    transform: translateY(1px);\n  }\n  </style>\n  <a id=\"button\">\n    <div id=\"text\"><slot slot=\"text\"></slot></div>\n    <div id=\"background\"></div>\n    <div id=\"shadow\"></div>\n  </a>\n  `\n\nclass nucleiButton extends HTMLElement { // eslint-disable-line no-unused-vars\n  /* Typescript: declare variables */\n  private _href: string = '' // eslint-disable-line no-undef\n  private _rel: string = '' // eslint-disable-line no-undef\n  private _target: string = '' // eslint-disable-line no-undef\n\n  constructor () {\n    // If you define a constructor, always call super() first!\n    // This is specific to CE and required by the spec.\n    super()\n    // create shadowRoot\n    let shadowRoot = this.attachShadow({mode: 'open'})\n    // check if polyfill is used\n    if (typeof ShadyCSS !== 'undefined') {\n      ShadyCSS.prepareTemplate(template, 'nuclei-button') // eslint-disable-line no-undef\n      // apply css polyfill\n      ShadyCSS.styleElement(this) // eslint-disable-line no-undef\n    }\n    // add content to shadowRoot\n    shadowRoot.appendChild(document.importNode(template.content, true))\n  }\n  /**\n  * @method observedAttributes\n  * @description return attributes that should be watched for updates\n   */\n  static get observedAttributes () {\n    return ['href', 'rel', 'target', 'disabled']\n  }\n  /**\n  * @method observedAttributes\n  * @description return attributes that should be watched for updates\n   */\n  attributeChangedCallback (attrName: string, oldVal: any, newVal: any) { // eslint-disable-line no-unused-vars\n    this[attrName] = newVal\n  }\n\n  /**\n  * @method connectedCallback\n  * @description When element is added to DOM\n   */\n  connectedCallback () {\n    let link = this.shadowRoot.querySelector('#button')\n    link.setAttribute('href', this.href)\n    link.setAttribute('target', this.target)\n    link.setAttribute('rel', this.rel)\n    // menuIcon on click\n    // this.shadowRoot.querySelector('#menuIcon').addEventListener('click', this.toggleOverlay.bind(this))\n  }\n  /**\n  * @method setter href\n  * @description set the href property\n   */\n  set href (href: string) {\n    if (this._href === href) return\n    this._href = href\n  }\n  /**\n   * @method getter href\n   * @description get the href property\n   */\n  get href () {\n    return this._href\n  }\n  /**\n  * @method setter target\n  * @description set the target property\n   */\n  set target (target: string) {\n    if (this._target === target) return\n    this._target = target\n  }\n  /**\n   * @method getter target\n   * @description get the target property\n   */\n  get target () {\n    return this._target\n  }\n  /**\n  * @method setter rel\n  * @description set the rel property\n   */\n  set rel (rel: string) {\n    if (this._rel === rel) return\n    this._rel = rel\n  }\n  /**\n   * @method getter rel\n   * @description get the rel property\n   */\n  get rel () {\n    return this._rel\n  }\n}\n\nwindow.customElements.define('nuclei-button', nucleiButton)\n"]}
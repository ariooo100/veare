{"version":3,"sources":["resources/js/modules/wcSupported.ts","resources/js/index.ts"],"names":["revisionedFiles","fetch","then","response","json","scriptPromise","Promise","resolve","reject","script","window","document","createElement","head","appendChild","onload","onerror","async","src","all","results","webComponentsAvailable","attachShadow","webComponentsSupported","fetchInject","layoutComponents","body","querySelector","style","opacity","display"],"mappings":"yBACA,MAAAA,EAAAC,MAAe,oBAAAC,KAAAC,GACbA,EAAOC,QAGRC,EAAA,IAAAC,QAAA,CAAAC,EAAAC,KCGC,MAAMC,EAASC,OAAOC,SAASC,cAAc,UAL/CF,OAAMC,SAAAE,KAAeC,YAASL,GAO5BA,EANAM,OAAOR,EACPE,EAAAO,QAAAR,EAEFC,EAAMQ,OAAA,EAMJR,EALAS,IAAM,oCAQRZ,QALEa,KAAOnB,EAAiBK,IAMzBH,KALCkB,IAMA,IALAhB,EAAOgB,EAAM,GAGf,MAAQC,EAAsB,IAAAf,QAAeC,IAKzC,IDpBW,KACN,oBAAqBI,UAC0B,mBAA/CA,SAASC,cAAc,OAAOU,cACrC,YAAaX,SAASC,cAAc,YCajCW,GACH,OAAQC,aAGN,+BAIKtB,KAHH,KAIEK,MAGJA,MACAkB,EAAAD,iBAAApB,EAAA,6BAAAiB,GAGF,IADAK,EAAMf,SAAAgB,cAAmB,QAGzBH,aACE,sGACDC,GACAvB,KAAK,KACG,OAAJwB,IACDA,EAAKE,MAAAC,QAAM,MAEd,KACQ,OAAJH,IACDA,EAAKE,MAAAC,QAAM,OAKfL,iBAGEpB,EAAI,8BACHA,EAAA,4BADGA,EAED,iBADFiB,GACFnB,KAEC,KACFS,SAAAgB,cAAA,mBAAAC,MAAAE,QAAA","file":"index.js","sourcesContent":["// test if browser supports 100% of web component specs\nexport default () => {\n  return 'registerElement' in document &&\n  typeof document.createElement('div').attachShadow === 'function' &&\n  'content' in document.createElement('template')\n}\n","/* global fetchInject */\nimport {default as webComponentsSupported} from './modules/wcSupported'\n// get correct file name\nconst revisionedFiles = fetch('/revisionedFiles').then(response => {\n  return response.json()\n})\n// get fetchInject class\nconst scriptPromise = new Promise((resolve, reject) => {\n  const script = window.document.createElement('script');\n  window.document.head.appendChild(script);\n  script.onload = resolve;\n  script.onerror = reject;\n  script.async = true;\n  script.src = '/js/fetch-inject.min.js?v=1.9.1';\n})\n\nPromise.all([revisionedFiles, scriptPromise])\n.then(results => {\n  let json = results[0]\n  // make sure WC are working\n  const webComponentsAvailable = new Promise((resolve) => {\n    if (!webComponentsSupported()) {\n      return fetchInject([\n        // polyfill\n        `/js/webcomponents-sd-ce.js`\n      ]).then(() => {\n        resolve()\n      })\n    }\n    resolve()\n  })\n  // load critical layout components\n  const layoutComponents = fetchInject([`/${json['js/layoutComponents.js']}`], webComponentsAvailable)\n  let body = document.querySelector('body')\n  // load webfont and view intro once downloaded\n  fetchInject([\n    `https://fonts.googleapis.com/css?family=Montserrat:700|Noto+Serif:400,400i|Source+Sans+Pro:400,600`\n  ], layoutComponents)\n  .then(() => {\n    if(body !== null) {\n      body.style.opacity = \"1\"\n    }\n  }, () => {\n    if(body !== null) {\n      body.style.opacity = \"1\"\n    }\n  })\n\n  // load responsiveMenu\n  fetchInject([\n    `/${json['js/responsiveMenu.js']}`,\n    `/${json['js/nucleiButton.js']}`,\n    `/${json['js/rest.js']}`\n  ], webComponentsAvailable)\n  .then(() => {\n    document.querySelector('responsive-menu').style.display = \"block\"\n  })\n})\n"]}